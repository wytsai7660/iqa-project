# The LIVE dataset contains subdirectories that each represent a distortion
# type. However, they also put the reference images from which the distorted
# images were generated into those subdirectories, despite the fact that they
# already exist in the refimgs directories. This script hard links the images
# mentioned in the CSV generated by `process_liqe_labels --no-strip-filenames`
# into a temporary directory so that the extra ones can be removed.

from argparse import ArgumentDefaultsHelpFormatter, ArgumentParser, Namespace
from os import link
from pandas import options, read_csv # pyright: ignore[reportUnknownVariableType]
from pathlib import Path, PurePath

options.mode.copy_on_write = True

def main(args: Namespace):
    labels_data_frame = read_csv(args.labels_path, keep_default_na=False, index_col="filename") # keep_default_na=False makes read_csv treat empty scene types as empty strings
    path: str
    for path in labels_data_frame.index:
        original_image_path = PurePath(args.live_dataset_path) / path
        hard_link_image_path = PurePath(args.temp_directory_path) / path
        Path(hard_link_image_path).parent.mkdir(parents=True, exist_ok=True)
        link(original_image_path, hard_link_image_path)

if __name__ ==  "__main__":
    argument_parser = ArgumentParser(
        formatter_class=ArgumentDefaultsHelpFormatter,
        description="""
            This script hard links the distorted images in the LIVE dataset into
            a temporary directory.
            """,
        epilog="For more information, see the comment at the top of this script."
    )
    _ = argument_parser.add_argument("labels_path",
        help="The output CSV of `process_liqe_labels.py --no-strip-filenames` for the LIVE dataset.")
    _ = argument_parser.add_argument("live_dataset_path",
        help="The path to the LIVE dataset. This script should work as long as the images are in their original locations.")
    _ = argument_parser.add_argument("temp_directory_path",
        help="The directory to hard link the distorted images into.")
    args = argument_parser.parse_args()
    main(args)
